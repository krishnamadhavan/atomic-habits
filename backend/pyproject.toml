[tool.poetry]
name = "atomic-habits"
version = "0.1.0"
description = "An intuitive habit tracking app designed to help you build and maintain positive routines through customizable goals and progress visualization."
authors = ["Krishna Madhavan <krishnamadhavan07@gmail.com>"]
license = "Apache License 2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.4"
fastapi = "^0.112.2"
uvicorn = {extras = ["standard"], version = "^0.30.6"}
pydantic = "^2.8.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
black = "^24.8.0"
mypy = "^1.11.2"
isort = "^5.13.2"
pre-commit = "^3.6.2"
coverage = "^7.4.3"
pytest = "^7.4.3"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
exclude = [".git", ".mypy_cache", ".ruff_cache", "alembic"]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
